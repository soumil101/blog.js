{{! Use the main layout }}
{{!< main }}

<section class="content-container">
    {{#if loggedIn}}
        <!-- Create Post Form on the Left -->
        <section class="content-left">
            <h2>Create a Post</h2>
            <form action="/posts" method="POST">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" required>
                <label for="content">Content:</label>
                <textarea id="content" name="content" required></textarea>
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <input type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <!-- Recent Posts on the Right -->
    <section class="content-right">
        <h2>Recent Posts</h2>
        <label for="sortPosts">Sort by:</label>
        <select id="sortPosts" onchange="sortPosts()">
            <option value="recency">Recency</option>
            <option value="likes">Number of Likes</option>
        </select>

        <div id="posts-list">
            {{#if posts.length}}
                <ul>
                    {{#each posts}}
                        {{> post this user=../user}}
                    {{/each}}
                </ul>
            {{else}}
                <p>No posts available.</p>
            {{/if}}
        </div>
    </section>
</section>

{{! JavaScript for Emoji Integration and Sorting Posts }}
<script>
    let allEmojis = [];  // Global list to hold all emojis

    function toggleEmojiPanel() {
        const container = document.getElementById('emoji-container');
        container.style.display = container.style.display === 'none' ? 'block' : 'none';

        if (container.style.display === 'block' && allEmojis.length === 0) {
            fetchEmojis();
        }
    }

    function fetchEmojis() {
        fetch('https://emoji-api.com/emojis?access_key=5b02b506d90b9bc848dc7f077f3d213ccb76a360')
            .then(response => response.json())
            .then(data => {
                allEmojis = data;
                displayEmojis(allEmojis);
            })
            .catch(error => {
                console.error('Error fetching emojis:', error);
            });
    }

    function displayEmojis(emojis, limit = 200) {
        const container = document.getElementById('emoji-grid');
        container.innerHTML = '';  // Clear previous results
        if (Array.isArray(emojis) && emojis.length > 0) {
            emojis.slice(0, limit).forEach(emoji => {
                const emojiElement = document.createElement('span');
                emojiElement.textContent = emoji.character;
                emojiElement.title = emoji.slug;  // Showing the emoji name on hover
                emojiElement.style.cursor = 'pointer';
                emojiElement.onclick = () => insertEmoji(emoji.character);
                container.appendChild(emojiElement);
            });
        } else {
            container.textContent = 'No emojis found. Try a different search!';
        }
    }

    function searchEmojis() {
        const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
        const filteredEmojis = allEmojis.filter(emoji => 
            emoji.slug.includes(searchTerm) || emoji.character.includes(searchTerm)
        );
        displayEmojis(filteredEmojis);
    }

    function insertEmoji(emoji) {
        const textarea = document.getElementById('content');
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;
        const text = textarea.value;

        textarea.value = text.slice(0, start) + emoji + text.slice(end);
        textarea.selectionStart = textarea.selectionEnd = start + emoji.length;
        textarea.focus();
    }

    function sortPosts() {
        const sortBy = document.getElementById('sortPosts').value;
        fetch(`/sortPosts?sortBy=${sortBy}`)
            .then(response => response.json())
            .then(data => {
                const postsList = document.getElementById('posts-list');
                postsList.innerHTML = data.html;
            })
            .catch(error => {
                console.error('Error sorting posts:', error);
            });
    }

</script>
